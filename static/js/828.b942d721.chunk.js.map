{"version":3,"file":"static/js/828.b942d721.chunk.js","mappings":"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","sources":["pages/MoviesDetails.jsx","services/fakeAPI.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\n\nimport { toast } from 'react-toastify';\n\nimport BackLink from \"components/BackLink/BackLink\";\nimport { getMovieDetails } from \"services/fakeAPI\";\n//! Импорт картинки-заглушки для МОДАЛКИ\nimport defaultImageSmall from \"images/no-img_small.jpg\";\n\n\n\nconst MoviesDetails = () => {\n    const location = useLocation();\n    //! useState ===> **** (аналог this.state.****)\n    const [movieDetails, setMovieDetails] = useState({});\n    const [yearDate, setYearDate] = useState(\"\");\n    const [userScore, setUserScore] = useState(0);\n    const [genresAll, setGenresAll] = useState(\"\");\n    const [error, setError] = useState(false);\n    \n    //* ++++++++++++++ location +++++++++++++++++++++++++++++\n    // const [locationState, setLocationState] = useState(null); //? МОЙ вариант для location\n\n    const [locationState] = useState('/'); //* Вариант Павла Шеремета\n    \n    //? МОЙ вариант для location\n    // useEffect(() => {\n    //     //! ТАК РАБОТАЕТ (2-й вариант)\n    //     if (location.state?.from)  {\n    //         setLocationState(location.state.from);\n    //     }\n    // }, [location.state]);\n    //* _______________ location _____________________________\n\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        setError(false);\n        getMovieDetails(Number(id))\n            .then(( movieDetails ) => { \n            setMovieDetails(movieDetails);\n            setYearDate(movieDetails.release_date.substr(0, 4));\n            setUserScore((movieDetails.vote_average * 10).toFixed(0));\n            setGenresAll((movieDetails.genres.map(item => item.name)).join(\" \")); \n            })\n            .catch(error => {\n            setError(error.message);\n            console.log(error.message); //!\n            toast.error(`Ошибка запроса: ${error.message}`, { position: \"top-center\", autoClose: 2000 } ); \n            })\n    }, [id]);\n    \n    //! Проверка movieDetails на пустой объект\n    if (!movieDetails) {\n        return null;  \n    }\n    //! Дестуктуризируем нужныесв-ва из объекта movieDetails \n    const { poster_path, title, name, overview } = movieDetails;\n\n    //* ++++++++++++++ location +++++++++++++++++++++++++++++\n    console.log(\"location.state?.from: \", location.state?.from); //!\n    // const backLinkHref = location.state?.from ?? '/'; //! вариант для location РЕПЕТЫ\n    // const backLinkHref = locationState ?? '/'; //! МОЙ вариант-1 для location\n    // const backLinkHref = location.state?.from ?? locationState; //? МОЙ вариант-2 для location\n    // console.log(\"backLinkHref: \", backLinkHref);  //!\n    //* _______________ location _____________________________\n\n\n\n    return (\n        <>\n            {error && (\n                <div style={{ margin: '0 auto', color: 'red' }}>\n                        <h1>Ошибка запроса:</h1>\n                        <h2 style={{ textDecoration: \"underline\", fontStyle: 'italic', color: '#a10000' }}>!!! {error}</h2>\n                    </div>\n            )}\n            \n\n            {!error && (\n                <div style={{ border: \"solid 1px\", boxShadow: \"7px 7px 3px 0px rgba(0,0,0,0.50)\" }}>\n                    \n                    {/* <BackLink to={backLinkHref}>Go back</BackLink> */}\n                    {/* //* Вариант подписи кнопки от Паши Шеремета */}\n                    <BackLink to={location.state?.from ?? locationState} btnText=\"Go back\" /> \n\n                    <div style={{ display: \"flex\" }}>\n                        <img\n                            style={{ marginLeft: \"24px\"}}\n                            // src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                            src={(poster_path) ? `https://image.tmdb.org/t/p/w300${poster_path}` : defaultImageSmall}\n                            alt={title || name}\n                        />\n\n                        <div style={{ marginLeft: \"24px\", paddingRight: \"24px\" }}>\n                            {/* <h1>Информация о фильме</h1> */}\n                            <h2 style={{ color: \"#571616\" }}>{`${title || name} (${yearDate || \"****\"})`}</h2>\n                            {/* <h2 style={{ color: \"#571616\" }}>{`${(title) ? title.toUpperCase() : name} (${yearDate || \"****\"})`}</h2> */}\n                            <p>{`User Score: ${userScore}%`}</p>\n                            <h3>Overview</h3>\n                            <p>{overview}</p>\n                            <h3>Genres</h3>\n                            <p>{genresAll.length !== 0 ? genresAll : 'Sorry, no genres...' }</p>\n                        </div>\n                    </div>\n\n                    <div style={{ border: \"solid 1px\", boxShadow: \"3px 3px 1px 0px rgba(0,0,0,0.25)\"}}>\n                        <p style={{ marginLeft: \"10px\" }}>Additional Information</p>\n                        <ul>\n                            <li>\n                                <Link\n                                    to=\"cast\"\n                                    state= {{ from: location.state?.from }} //* Вариант Паши Шеремета задачи \"КАК ПРОКИНУТЬ МАРШРУТ ДАЛЬШЕ\"\n                                >\n                                    Cast\n                                </Link>\n                            </li>\n                            <li>\n                                <Link\n                                    to=\"reviews\"\n                                    state= {{ from: location.state?.from }} //* Вариант Паши Шеремета задачи \"КАК ПРОКИНУТЬ МАРШРУТ ДАЛЬШЕ\"\n                                >\n                                    Reviews\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <Suspense fallback={null}>\n                        <Outlet />\n                    </Suspense>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default MoviesDetails;","import axios from 'axios';\n\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Константы для URL-запросов:\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '41b230c5977baa736e324532e16fdadb';\n\n\n// const END_POINTS_1 = \"trending/all/day\" //!  /trending/movie/week ==> список ВСЕХ самых популярных фильмов на сегодня ЗА ДЕНЬ для создания коллекции на главной странице.\nconst END_POINTS_1 = \"trending/movie/week\" //!  /trending/movie/week ==> список <movie> самых популярных фильмов на сегодня ЗА НЕДЕЛЮ для создания коллекции на главной странице.\n\nconst END_POINTS_2 = \"search/movie\" //!  /search/search-movies ==> поиск кинофильма по ключевому слову на странице фильмов.\nconst query = \"avatar\" //?\nconst page = 1; //? можно добавить в строку запроса\n\nconst END_POINTS_3 = \"movie\" //!  /movies/get-movie-details ==> запрос полной информации о фильме для страницы кинофильма.\nconst movie_id = 616037 //?\n\nconst END_POINTS_4 = \"movie\" //!  /movies/get-movie-credits  ==> запрос информации об актёрском составе для страницы кинофильма.\nconst CREDITS = \"credits\"\n\nconst END_POINTS_5 = \"movie\" //!  /movies/get-movie-reviews ==> запрос обзоров для страницы кинофильма.\nconst REVIEWS = \"reviews\"\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Формируем строки URL-запросов:\nconst url_1 = `${BASE_URL}/${END_POINTS_1}?api_key=${API_KEY}`;\nconsole.log(\"url_1: \", url_1); //!\n\nconst url_2 = `${BASE_URL}/${END_POINTS_2}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`;\nconsole.log(\"url_2: \", url_2); //!\n\nconst url_3 = `${BASE_URL}/${END_POINTS_3}/${movie_id}?api_key=${API_KEY}&language=en-US`;\nconsole.log(\"url_3: \", url_3); //!\n\nconst url_4 = `${BASE_URL}/${END_POINTS_4}/${movie_id}/${CREDITS}?api_key=${API_KEY}&language=en-US`;\nconsole.log(\"url_4: \", url_4); //!\n\nconst url_5 = `${BASE_URL}/${END_POINTS_5}/${movie_id}/${REVIEWS}?api_key=${API_KEY}&language=en-US&page=${page}`;\nconsole.log(\"url_5: \", url_5); //!\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Формируем URL-запросы:\n//! 1 \nexport async function getTrendingAllDay() {\n    const response = await axios.get(url_1) //! 1 \n    const { results } = response.data\n    return results;\n}\n\n\n\n//! 2 \nexport async function getSearchMovies(query) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_2}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`) //!\n    const { results } = response.data //*  /search/search-movies ==> поиск кинофильма по ключевому слову на странице фильмов.\n    return results;\n}\n\n\n\n//! 3 \nexport async function getMovieDetails(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_3}/${movie_id}?api_key=${API_KEY}&language=en-US`) //!\n    return response.data;\n}\n\n\n\n//! 4 \nexport async function getMovieCast(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_4}/${movie_id}/${CREDITS}?api_key=${API_KEY}&language=en-US`) //!\n    return response.data;\n}\n\n\n\n//! 5 \nexport async function getMovieReviews(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_5}/${movie_id}/${REVIEWS}?api_key=${API_KEY}&language=en-US&page=${page}`) //!\n    return response.data;\n}\n"],"names":["location","useLocation","useState","movieDetails","setMovieDetails","yearDate","setYearDate","userScore","setUserScore","genresAll","setGenresAll","error","setError","locationState","id","useParams","useEffect","getMovieDetails","Number","then","release_date","substr","vote_average","toFixed","genres","map","item","name","join","catch","message","console","log","toast","position","autoClose","poster_path","title","overview","state","from","style","margin","color","textDecoration","fontStyle","border","boxShadow","to","btnText","display","marginLeft","src","defaultImageSmall","alt","paddingRight","length","Suspense","fallback","BASE_URL","API_KEY","END_POINTS_2","END_POINTS_3","movie_id","END_POINTS_4","CREDITS","END_POINTS_5","REVIEWS","url_1","url_2","url_3","url_4","url_5","getTrendingAllDay","axios","response","results","data","getSearchMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}