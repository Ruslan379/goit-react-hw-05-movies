{"version":3,"file":"static/js/415.fcd3ba29.chunk.js","mappings":";oNA6CA,UAlCa,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAEJ,GACNC,EAAWD,EACZ,IACAK,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EAAMG,SAClBC,EAAAA,GAAAA,MAAA,2FAA+BJ,EAAMG,SAAW,CAAEE,SAAU,aAAcC,UAAW,KACxF,GACJ,GAAE,KAID,6BACE,4CACA,yBACGZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,EAAcC,KAAd,OACX,SAAC,KAAD,CAAeC,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMtB,GAAlD,UACE,uBAAIkB,KADKD,EADA,QAUpB,4MCrCKM,EAAW,+BACXC,EAAU,mCAMVC,EAAe,eAIfC,EAAe,QACfC,EAAW,OAEXC,EAAe,QACfC,EAAU,UAEVC,EAAe,QACfC,EAAU,UAKVC,EAAK,UAAMT,EAAN,YAlBU,sBAkBV,oBAA0CC,GACrDd,QAAQC,IAAI,UAAWqB,GAEvB,IAAMC,EAAK,UAAMV,EAAN,YAAkBE,EAAlB,oBAA0CD,EAA1C,iCAlBG,SAkBH,iBAjBE,EAiBF,wBACXd,QAAQC,IAAI,UAAWsB,GAEvB,IAAMC,EAAK,UAAMX,EAAN,YAAkBG,EAAlB,YAAkCC,EAAlC,oBAAsDH,EAAtD,mBACXd,QAAQC,IAAI,UAAWuB,GAEvB,IAAMC,EAAK,UAAMZ,EAAN,YAAkBK,EAAlB,YAAkCD,EAAlC,YAA8CE,EAA9C,oBAAiEL,EAAjE,mBACXd,QAAQC,IAAI,UAAWwB,GAEvB,IAAMC,EAAK,UAAMb,EAAN,YAAkBO,EAAlB,YAAkCH,EAAlC,YAA8CI,EAA9C,oBAAiEP,EAAjE,gCA1BE,GAiCN,SAAelB,IAAtB,4CAAO,iIACoB+B,IAAAA,IAAUL,GAD9B,cACGM,EADH,OAEKnC,EAAYmC,EAASC,KAArBpC,QAFL,kBAGIA,GAHJ,kEASA,SAAeqC,EAAtB,+CAAO,sCAA+BC,GAA/B,yFACoBJ,IAAAA,IAAA,UAAad,EAAb,YAAyBE,EAAzB,oBAAiDD,EAAjD,iCAAiFiB,EAAjF,gCADpB,cACGH,EADH,OAEKnC,EAAYmC,EAASC,KAArBpC,QAFL,kBAGIA,GAHJ,mEASA,SAAeuC,EAAtB,+CAAO,sCAA+Bf,GAA/B,uFACoBU,IAAAA,IAAA,UAAad,EAAb,YAAyBG,EAAzB,YAAyCC,EAAzC,oBAA6DH,EAA7D,oBADpB,cACGc,EADH,yBAEIA,EAASC,MAFb,mEAQA,SAAeI,EAAtB,+CAAO,sCAA4BhB,GAA5B,uFACoBU,IAAAA,IAAA,UAAad,EAAb,YAAyBK,EAAzB,YAAyCD,EAAzC,YAAqDE,EAArD,oBAAwEL,EAAxE,oBADpB,cACGc,EADH,yBAEIA,EAASC,MAFb,mEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjB,GAA/B,uFACoBU,IAAAA,IAAA,UAAad,EAAb,YAAyBO,EAAzB,YAAyCH,EAAzC,YAAqDI,EAArD,oBAAwEP,EAAxE,gCApEd,IAmEN,cACGc,EADH,yBAEIA,EAASC,MAFb,mEAxCP7B,QAAQC,IAAI,UAAWyB","sources":["pages/Home.jsx","services/fakeAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\n\nimport { getTrendingAllDay } from \"services/fakeAPI\";\n\n\n\n\n\nconst Home = () => {\n  const location = useLocation();\n  //! useState ===> **** (аналог this.state.****)\n  const [results, setResults] = useState([]);\n\n\n  useEffect(() => {\n    getTrendingAllDay()\n      .then(( results ) => { \n        setResults(results);\n      })\n      .catch(error => {\n          console.log(error.message); //!\n          toast.error(`Ошибка запроса: ${error.message}`, { position: \"top-center\", autoClose: 2000 } ); \n      })\n  }, []);\n  \n  \n  return (\n    <main>\n      <h1>Trending today</h1>\n      <div>\n        {results.map(({ id, title, name }) => (\n          <Link key={id} to={`movies/${id}`} state={{ from: location }}>\n            <p>{title}</p>\n            {/* <p>{title || name}</p> */}\n            {/* <p>{(title) ? title.toUpperCase() : name}</p> */}\n          </Link>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Константы для URL-запросов:\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '41b230c5977baa736e324532e16fdadb';\n\n\n// const END_POINTS_1 = \"trending/all/day\" //!  /trending/movie/week ==> список ВСЕХ самых популярных фильмов на сегодня ЗА ДЕНЬ для создания коллекции на главной странице.\nconst END_POINTS_1 = \"trending/movie/week\" //!  /trending/movie/week ==> список <movie> самых популярных фильмов на сегодня ЗА НЕДЕЛЮ для создания коллекции на главной странице.\n\nconst END_POINTS_2 = \"search/movie\" //!  /search/search-movies ==> поиск кинофильма по ключевому слову на странице фильмов.\nconst query = \"avatar\" //?\nconst page = 1; //? можно добавить в строку запроса\n\nconst END_POINTS_3 = \"movie\" //!  /movies/get-movie-details ==> запрос полной информации о фильме для страницы кинофильма.\nconst movie_id = 616037 //?\n\nconst END_POINTS_4 = \"movie\" //!  /movies/get-movie-credits  ==> запрос информации об актёрском составе для страницы кинофильма.\nconst CREDITS = \"credits\"\n\nconst END_POINTS_5 = \"movie\" //!  /movies/get-movie-reviews ==> запрос обзоров для страницы кинофильма.\nconst REVIEWS = \"reviews\"\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Формируем строки URL-запросов:\nconst url_1 = `${BASE_URL}/${END_POINTS_1}?api_key=${API_KEY}`;\nconsole.log(\"url_1: \", url_1); //!\n\nconst url_2 = `${BASE_URL}/${END_POINTS_2}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`;\nconsole.log(\"url_2: \", url_2); //!\n\nconst url_3 = `${BASE_URL}/${END_POINTS_3}/${movie_id}?api_key=${API_KEY}&language=en-US`;\nconsole.log(\"url_3: \", url_3); //!\n\nconst url_4 = `${BASE_URL}/${END_POINTS_4}/${movie_id}/${CREDITS}?api_key=${API_KEY}&language=en-US`;\nconsole.log(\"url_4: \", url_4); //!\n\nconst url_5 = `${BASE_URL}/${END_POINTS_5}/${movie_id}/${REVIEWS}?api_key=${API_KEY}&language=en-US&page=${page}`;\nconsole.log(\"url_5: \", url_5); //!\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Формируем URL-запросы:\n//! 1 \nexport async function getTrendingAllDay() {\n    const response = await axios.get(url_1) //! 1 \n    const { results } = response.data\n    return results;\n}\n\n\n\n//! 2 \nexport async function getSearchMovies(query) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_2}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`) //!\n    const { results } = response.data //*  /search/search-movies ==> поиск кинофильма по ключевому слову на странице фильмов.\n    return results;\n}\n\n\n\n//! 3 \nexport async function getMovieDetails(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_3}/${movie_id}?api_key=${API_KEY}&language=en-US`) //!\n    return response.data;\n}\n\n\n\n//! 4 \nexport async function getMovieCast(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_4}/${movie_id}/${CREDITS}?api_key=${API_KEY}&language=en-US`) //!\n    return response.data;\n}\n\n\n\n//! 5 \nexport async function getMovieReviews(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_5}/${movie_id}/${REVIEWS}?api_key=${API_KEY}&language=en-US&page=${page}`) //!\n    return response.data;\n}\n"],"names":["location","useLocation","useState","results","setResults","useEffect","getTrendingAllDay","then","catch","error","console","log","message","toast","position","autoClose","map","id","title","name","to","state","from","BASE_URL","API_KEY","END_POINTS_2","END_POINTS_3","movie_id","END_POINTS_4","CREDITS","END_POINTS_5","REVIEWS","url_1","url_2","url_3","url_4","url_5","axios","response","data","getSearchMovies","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}