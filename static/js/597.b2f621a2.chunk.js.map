{"version":3,"file":"static/js/597.b2f621a2.chunk.js","mappings":";4MAuDA,UA/Ca,WAET,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAGQC,GAAOC,EAAAA,EAAAA,MAAPD,GAuBR,OAnBAE,EAAAA,EAAAA,YAAU,YACVC,EAAAA,EAAAA,IAAaC,OAAOJ,IACfK,MAAK,SAAEP,GAEJC,EAAaD,EAAUQ,KAG1B,IACAC,OAAM,SAAAC,GAEHC,QAAQC,IAAIF,EAAMG,SAClBC,EAAAA,GAAAA,MAAA,2FAA+BJ,EAAMG,SAAW,CAAEE,SAAU,aAAcC,UAAW,KACxF,GACJ,GAAE,CAACd,IAMCF,GAKD,8BACI,wBACKA,EAAUiB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAhC,OACX,2BACI,gBAAKC,IAAG,wCAAmCH,GAAgBI,IAAI,MAC/D,wBAAKH,KACL,4CAAkBC,OAHbD,EADE,QANhB,IAgBd,6MC/CKI,EAAW,+BACXC,EAAU,mCAMVC,EAAe,eAIfC,EAAe,QACfC,EAAW,OAEXC,EAAe,QACfC,EAAU,UAEVC,EAAe,QACfC,EAAU,UAKVC,EAAK,UAAMT,EAAN,YAlBU,mBAkBV,oBAA0CC,GACrDb,QAAQC,IAAI,UAAWoB,GAEvB,IAAMC,EAAK,UAAMV,EAAN,YAAkBE,EAAlB,oBAA0CD,EAA1C,iCAlBG,SAkBH,iBAjBE,EAiBF,wBACXb,QAAQC,IAAI,UAAWqB,GAEvB,IAAMC,EAAK,UAAMX,EAAN,YAAkBG,EAAlB,YAAkCC,EAAlC,oBAAsDH,EAAtD,mBACXb,QAAQC,IAAI,UAAWsB,GAEvB,IAAMC,EAAK,UAAMZ,EAAN,YAAkBK,EAAlB,YAAkCD,EAAlC,YAA8CE,EAA9C,oBAAiEL,EAAjE,mBACXb,QAAQC,IAAI,UAAWuB,GAEvB,IAAMC,EAAK,UAAMb,EAAN,YAAkBO,EAAlB,YAAkCH,EAAlC,YAA8CI,EAA9C,oBAAiEP,EAAjE,gCA1BE,GAiCN,SAAea,IAAtB,4CAAO,iIAUoBC,IAAAA,IAAUN,GAV9B,cAUGO,EAVH,OAeKC,EAAYD,EAASE,KAArBD,QAfL,kBAqBIA,GArBJ,kEA2BA,SAAeE,EAAtB,+CAAO,sCAA+BC,GAA/B,yFACoBL,IAAAA,IAAA,UAAaf,EAAb,YAAyBE,EAAzB,oBAAiDD,EAAjD,iCAAiFmB,EAAjF,gCADpB,cACGJ,EADH,OAMKC,EAAYD,EAASE,KAArBD,QANL,kBAYIA,GAZJ,mEAkBA,SAAeI,EAAtB,+CAAO,sCAA+BjB,GAA/B,uFACoBW,IAAAA,IAAA,UAAaf,EAAb,YAAyBG,EAAzB,YAAyCC,EAAzC,oBAA6DH,EAA7D,oBADpB,cACGe,EADH,yBAOIA,EAASE,MAPb,mEAaA,SAAepC,EAAtB,+CAAO,sCAA4BsB,GAA5B,uFACoBW,IAAAA,IAAA,UAAaf,EAAb,YAAyBK,EAAzB,YAAyCD,EAAzC,YAAqDE,EAArD,oBAAwEL,EAAxE,oBADpB,cACGe,EADH,yBAOIA,EAASE,MAPb,mEAaA,SAAeI,EAAtB,+CAAO,sCAA+BlB,GAA/B,uFACoBW,IAAAA,IAAA,UAAaf,EAAb,YAAyBO,EAAzB,YAAyCH,EAAzC,YAAqDI,EAArD,oBAAwEP,EAAxE,gCAzGd,IAwGN,cACGe,EADH,yBAOIA,EAASE,MAPb,mEA7EP9B,QAAQC,IAAI,UAAWwB","sources":["components/Cast.jsx","fakeAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nimport { toast } from 'react-toastify';\n\nimport { getMovieCast } from \"fakeAPI\";\n\n\nconst Cast = () => {\n    //! useState ===> **** (аналог this.state.****)\n    const [movieCast, setMovieCast] = useState([]);\n    \n\n    const { id } = useParams();\n    // const movie_id = Number(id); //? \n    // console.log(\"Cast movie_id=(id): \", movie_id); //!\n\n    useEffect(() => {\n    getMovieCast(Number(id))\n        .then(( movieCast ) => { \n            // console.log(\"getMovieCast movieCast: \", movieCast); //!\n            setMovieCast(movieCast.cast);\n            // console.log(\"getMovieCast movieCast.cast: \", movieCast.cast); //!\n            \n        })\n        .catch(error => {\n            // setError(error.message);\n            console.log(error.message); //!\n            toast.error(`Ошибка запроса: ${error.message}`, { position: \"top-center\", autoClose: 2000 } ); \n        })\n    }, [id]);\n\n    // console.log(\"getMovieCast movieCast.cast: \", movieCast.cast); //!\n\n\n    //! Проверка movieCast на пустой объект\n    if (!movieCast) {\n        return null;  \n    }\n\n    return (\n        <section>\n            <ul>\n                {movieCast.map(({ profile_path, original_name, character }) => (\n                    <li key={original_name}>\n                        <img src={`https://image.tmdb.org/t/p/w92${profile_path}`} alt=\"\" />\n                        <h4>{original_name}</h4>\n                        <p>{`Character: ${character}`}</p>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nexport default Cast;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//todo OLD\n// const Cast = () => {\n//   return (\n//     <section>\n//       <div>\n//         <h2>Актер № 1</h2>\n//         <p>\n//           Роль: Сonsectetur\n//         </p>\n//       </div>\n//       <div>\n//         <h2>Актер № 2</h2>\n//         <p>\n//           Роль:  Corrupti\n//         </p>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Cast;","import axios from 'axios';\n\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Константы для URL-запросов:\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '41b230c5977baa736e324532e16fdadb';\n\n// const API_KEY = '28759369-3882e1068ac26fe18d14affeb'; //! не мой!\n\nconst END_POINTS_1 = \"trending/all/day\" //!  /trending/all/day ==> список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n\nconst END_POINTS_2 = \"search/movie\" //!  /search/search-movies ==> поиск кинофильма по ключевому слову на странице фильмов.\nconst query = \"avatar\" //?\nconst page = 1; //? можно добавить в строку запроса\n\nconst END_POINTS_3 = \"movie\" //!  /movies/get-movie-details ==> запрос полной информации о фильме для страницы кинофильма.\nconst movie_id = 616037 //?\n\nconst END_POINTS_4 = \"movie\" //!  /movies/get-movie-credits  ==> запрос информации об актёрском составе для страницы кинофильма.\nconst CREDITS = \"credits\"\n\nconst END_POINTS_5 = \"movie\" //!  /movies/get-movie-reviews ==> запрос обзоров для страницы кинофильма.\nconst REVIEWS = \"reviews\"\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Формируем строки URL-запросов:\nconst url_1 = `${BASE_URL}/${END_POINTS_1}?api_key=${API_KEY}`;\nconsole.log(\"url_1: \", url_1); //!\n\nconst url_2 = `${BASE_URL}/${END_POINTS_2}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`;\nconsole.log(\"url_2: \", url_2); //!\n\nconst url_3 = `${BASE_URL}/${END_POINTS_3}/${movie_id}?api_key=${API_KEY}&language=en-US`;\nconsole.log(\"url_3: \", url_3); //!\n\nconst url_4 = `${BASE_URL}/${END_POINTS_4}/${movie_id}/${CREDITS}?api_key=${API_KEY}&language=en-US`;\nconsole.log(\"url_4: \", url_4); //!\n\nconst url_5 = `${BASE_URL}/${END_POINTS_5}/${movie_id}/${REVIEWS}?api_key=${API_KEY}&language=en-US&page=${page}`;\nconsole.log(\"url_5: \", url_5); //!\n\n\n//!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n//! Формируем URL-запросы:\n//! 1 \nexport async function getTrendingAllDay() {\n\n    //                                   https://api.themoviedb.org/3/movie/19995/reviews?api_key=41b230c5977baa736e324532e16fdadb&language=en-US&page=1\n    //                                   https://api.themoviedb.org/3/movie/19995/credits?api_key=41b230c5977baa736e324532e16fdadb&language=en-US\n    //!                                  https://api.themoviedb.org/3/movie/19995/images?api_key=41b230c5977baa736e324532e16fdadb&language=en-US\n    //                                   https://api.themoviedb.org/3/movie/19995?api_key=41b230c5977baa736e324532e16fdadb&language=en-US\n    // const response = await axios.get(\"https://api.themoviedb.org/3/authentication/token/new?api_key=41b230c5977baa736e324532e16fdadb\") //!  /a temporary request token\n    // const response = await axios.get(\"https://api.themoviedb.org/3/movie/550?api_key=41b230c5977baa736e324532e16fdadb\") //! пример\n    // const response = await axios.get(\"https://api.themoviedb.org/3/trending/all/day?api_key=41b230c5977baa736e324532e16fdadb\") //!  /trending/all/day\n\n    const response = await axios.get(url_1) //! 1 \n    // const all = await response.data //?\n    // console.log(\"axios response.data: \", response.data); //!\n    // console.log(\"all: \", all); //?\n\n    const { results } = response.data //!  /trending/all/day ==> список самых популярных фильмов на сегодня\n    // console.log(\"axios results: \", results); //!\n    // console.log(\"axios total_pages: \", total_pages); //!\n\n    // return total_pages;\n    // return response.data;\n    return results;\n}\n\n\n\n//! 2 \nexport async function getSearchMovies(query) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_2}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`) //!\n    // const all = await response.data //?\n    // console.log(\"axios response.data: \", response.data); //!\n    // console.log(\"all: \", all); //?\n\n    const { results } = response.data //*  /search/search-movies ==> поиск кинофильма по ключевому слову на странице фильмов.\n    // console.log(\"axios results: \", results); //!\n    // console.log(\"axios total_pages: \", total_pages); //!\n\n    // return total_pages;\n    // return response.data;\n    return results;\n}\n\n\n\n//! 3 \nexport async function getMovieDetails(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_3}/${movie_id}?api_key=${API_KEY}&language=en-US`) //!\n    // const all = await response.data //?\n    // console.log(\"axios response.data: \", response.data); //!\n    // console.log(\"getMovieDetails all: \", all); //?\n\n    // return all;\n    return response.data;\n}\n\n\n\n//! 4 \nexport async function getMovieCast(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_4}/${movie_id}/${CREDITS}?api_key=${API_KEY}&language=en-US`) //!\n    // const all = await response.data //?\n    // console.log(\"axios response.data: \", response.data); //!\n    // console.log(\"getMovieDetails all: \", all); //?\n\n    // return all;\n    return response.data;\n}\n\n\n\n//! 5 \nexport async function getMovieReviews(movie_id) {\n    const response = await axios.get(`${BASE_URL}/${END_POINTS_5}/${movie_id}/${REVIEWS}?api_key=${API_KEY}&language=en-US&page=${page}`) //!\n    // const all = await response.data //?\n    // console.log(\"axios response.data: \", response.data); //!\n    // console.log(\"getMovieDetails all: \", all); //?\n\n    // return all;\n    return response.data;\n}\n\n\n\n//todo OLD\n// const products = [\n//     { id: \"h-1\", name: \"Hoodie 1\" },\n//     { id: \"h-2\", name: \"Hoodie 2\" },\n//     { id: \"h-3\", name: \"Hoodie 3\" },\n//     { id: \"s-1\", name: \"Sneakers 1\" },\n//     { id: \"s-2\", name: \"Sneakers 2\" },\n//     { id: \"s-3\", name: \"Sneakers 3\" },\n//     { id: \"s-4\", name: \"Sneakers 4\" },\n//     { id: \"p-1\", name: \"Pants 1\" },\n//     { id: \"p-2\", name: \"Pants 2\" },\n//     { id: \"p-3\", name: \"Pants 3\" }\n// ];\n\n// export const getProducts = () => {\n//     return products;\n// };\n\n// export const getProductById = (productId) => {\n//     return products.find((product) => product.id === productId);\n// };\n"],"names":["useState","movieCast","setMovieCast","id","useParams","useEffect","getMovieCast","Number","then","cast","catch","error","console","log","message","toast","position","autoClose","map","profile_path","original_name","character","src","alt","BASE_URL","API_KEY","END_POINTS_2","END_POINTS_3","movie_id","END_POINTS_4","CREDITS","END_POINTS_5","REVIEWS","url_1","url_2","url_3","url_4","url_5","getTrendingAllDay","axios","response","results","data","getSearchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}